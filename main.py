import logging
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    CallbackQueryHandler,
    ConversationHandler
)
from dotenv import load_dotenv
from src.config import TOKEN
from src.keyboards import main_menu_keyboard
from src.handlers import (
    start_handler,
    ask_question_handler,
    button_click_handler,
    reset_progress_handler,
    pronounce_word_handler
)
from src.session_manager import end_session
from src.word_management import (
    add_word,
    save_word,
    delete_word,
    confirm_delete,
    show_user_words,
    handle_choice,
    handle_delete_choice,
    WAITING_WORD,
    WAITING_DELETE,
    WAITING_CHOICE,
    WAITING_DELETE_CHOICE
)
from src.stats import stats_handler, clear_user_sessions

# ================== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ==================
load_dotenv()

# ================== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ==================
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    # ================== –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ==================
    init_handlers(dispatcher)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    dispatcher.add_error_handler(handle_errors)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    updater.idle()


def init_handlers(dispatcher):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –±–æ—Ç–∞."""
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dispatcher.add_handler(CommandHandler("start", start_handler))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç üöÄ$"), ask_question_handler))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–ú–æ–∏ —Å–ª–æ–≤–∞ üìñ$"), show_user_words))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä$"), stats_handler))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–í –º–µ–Ω—é ‚Ü©Ô∏è$"), end_session))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–û—á–∏—Å—Ç–∏—Ç—å üóë$"), clear_user_sessions))

    # CallbackQuery –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dispatcher.add_handler(CallbackQueryHandler(reset_progress_handler, pattern="^reset_progress$"))
    dispatcher.add_handler(CallbackQueryHandler(button_click_handler, pattern=r"^answer_"))
    dispatcher.add_handler(CallbackQueryHandler(pronounce_word_handler, pattern="^pronounce_word$"))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞–º–∏
    init_word_management(dispatcher)


def init_word_management(dispatcher):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ConversationHandler –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞–º–∏."""
    word_conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(Filters.regex(r"^–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï$"), add_word),
            MessageHandler(Filters.regex(r"^–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ ‚ûñ$"), delete_word)
        ],
        states={
            WAITING_WORD: [MessageHandler(Filters.text & ~Filters.command, save_word)],
            WAITING_DELETE: [MessageHandler(Filters.text & ~Filters.command, confirm_delete)],
            WAITING_CHOICE: [MessageHandler(Filters.text & ~Filters.command, handle_choice)],
            WAITING_DELETE_CHOICE: [MessageHandler(Filters.text & ~Filters.command, handle_delete_choice)]
        },
        fallbacks=[
            CommandHandler("cancel", cancel_action)
        ],
        map_to_parent={
            ConversationHandler.END: ConversationHandler.END
        }
    )
    dispatcher.add_handler(word_conv_handler)


def cancel_action(update, context):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω—ã."""
    update.message.reply_text(
        "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=main_menu_keyboard()
    )
    return ConversationHandler.END


def handle_errors(update, context):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫."""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")


if __name__ == "__main__":
    main()
