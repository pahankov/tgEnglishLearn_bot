#!/usr/bin/env python3
import logging
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, ConversationHandler
from src.config import TOKEN
from src.keyboards import main_menu_keyboard
from src.word_management import (
    add_word, save_word, delete_word, confirm_delete, show_user_words,
    WAITING_WORD, WAITING_DELETE
)
from src.handlers import start_handler, ask_question_handler, button_click_handler, reset_progress_handler
from src.stats import stats_handler  # –ò–º–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

def main():
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback-–∑–∞–ø—Ä–æ—Å—ã
    dispatcher.add_handler(CallbackQueryHandler(reset_progress_handler, pattern="^reset_progress$"))
    dispatcher.add_handler(CallbackQueryHandler(button_click_handler))

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
    dispatcher.add_handler(CommandHandler("start", start_handler))

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è: –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç üöÄ$"), ask_question_handler))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–ú–æ–∏ —Å–ª–æ–≤–∞ üìñ$"), show_user_words))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä$"), stats_handler))

    # ConversationHandler –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ–≤
    conv_handler = ConversationHandler(
        entry_points=[
            MessageHandler(Filters.regex(r"^–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï$"), add_word),
            MessageHandler(Filters.regex(r"^–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ ‚ûñ$"), delete_word)
        ],
        states={
            WAITING_WORD: [MessageHandler(Filters.text & ~Filters.command, save_word)],
            WAITING_DELETE: [MessageHandler(Filters.text & ~Filters.command, confirm_delete)]
        },
        fallbacks=[
            CommandHandler("cancel", lambda update, context: update.message.reply_text(
                "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=main_menu_keyboard()
            ))
        ]
    )
    dispatcher.add_handler(conv_handler)

    dispatcher.add_error_handler(lambda update, context: logger.error("–û—à–∏–±–∫–∞:", exc_info=context.error))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
