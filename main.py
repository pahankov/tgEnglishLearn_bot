import logging
from telegram import ReplyKeyboardRemove
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    CallbackQueryHandler,
    ConversationHandler
)
from dotenv import load_dotenv
from src.config import TOKEN
from src.keyboards import main_menu_keyboard
from src.handlers import (
    start_handler,
    ask_question_handler,
    button_click_handler,
    pronounce_word_handler,
    handle_menu_button
)
from src.stats import stats_handler, clear_user_sessions
from src.word_management import (
    add_word,
    save_word,
    delete_word,
    confirm_delete,
    show_user_words,
    handle_choice,
    handle_delete_choice,
    WAITING_WORD,
    WAITING_DELETE,
    WAITING_CHOICE,
    WAITING_DELETE_CHOICE
)

# ================== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ==================
load_dotenv()

# ================== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ==================
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    # ================== –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ==================

    # 1. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
    dispatcher.add_handler(CommandHandler("start", start_handler))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–í –º–µ–Ω—é ‚Ü©Ô∏è$"), handle_menu_button))

    # 2. ConversationHandlers
    add_conv = ConversationHandler(
        entry_points=[MessageHandler(Filters.regex(r"^–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï$"), add_word)],
        states={
            WAITING_WORD: [MessageHandler(Filters.text & ~Filters.command, save_word)],
            WAITING_CHOICE: [MessageHandler(Filters.regex(r"^(–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë ‚ûï|–í –º–µ–Ω—é ‚Ü©Ô∏è)$"), handle_choice)]
        },
        fallbacks=[],
        allow_reentry=True,
        per_user=True
    )

    delete_conv = ConversationHandler(
        entry_points=[MessageHandler(Filters.regex(r"^–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ ‚ûñ$"), delete_word)],
        states={
            WAITING_DELETE: [MessageHandler(Filters.text & ~Filters.command, confirm_delete)],
            WAITING_DELETE_CHOICE: [MessageHandler(Filters.regex(r"^(–£–¥–∞–ª–∏—Ç—å –µ—â—ë ‚ûñ|–í –º–µ–Ω—é ‚Ü©Ô∏è)$"), handle_delete_choice)]
        },
        fallbacks=[],
        allow_reentry=True,
        per_user=True
    )

    dispatcher.add_handler(add_conv)
    dispatcher.add_handler(delete_conv)

    # 3. –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç üöÄ$"), ask_question_handler))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–ú–æ–∏ —Å–ª–æ–≤–∞ üìñ$"), show_user_words))
    dispatcher.add_handler(MessageHandler(Filters.regex(r"^–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä$"), stats_handler))

    # 4. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—á–∏—Å—Ç–∏—Ç—å üóë"
    dispatcher.add_handler(MessageHandler(
        Filters.regex(r"^–û—á–∏—Å—Ç–∏—Ç—å üóë$"),
        lambda update, context: clear_user_sessions(update, context)
    ))

    # 5. CallbackQuery –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dispatcher.add_handler(CallbackQueryHandler(button_click_handler, pattern=r"^answer_"))
    dispatcher.add_handler(CallbackQueryHandler(pronounce_word_handler, pattern="^pronounce_word$"))

    # 6. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    dispatcher.add_error_handler(lambda u, c: logger.error(f"–û—à–∏–±–∫–∞: {c.error}"))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    updater.idle()


if __name__ == "__main__":
    main()